version: '2.1'

services:
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD={{ cloud_db_pass }}
      - MYSQL_HOST=db
      - NEXTCLOUD_ADMIN_USER={{ cloud_admin }}
      - NEXTCLOUD_ADMIN_PASSWORD={{ cloud_admin_pass }}
      - REDIS_HOST=redis
    volumes:
      - nextcloud:/var/www/html:z
    networks:
      default:
      inverseproxy_shared:
      proxy:
    labels:
      traefik.docker.network: "inverseproxy_shared"
      traefik.enable: "true"
      traefik.http.routers.cloud-unsec.entrypoints: "http"
      traefik.http.routers.cloud-unsec.middlewares: "https-redirect@file"
      traefik.http.routers.cloud-unsec.rule: "Host(`{{ cloud_url }}`)"
      traefik.http.routers.cloud-unsec.service: "cloud"
      traefik.http.routers.cloud.entrypoints: "https"
      traefik.http.routers.cloud.middlewares: "security-headers@file"
      traefik.http.routers.cloud.rule: "Host(`{{ cloud_url }}`)"
      traefik.http.routers.cloud.service: "cloud"
      traefik.http.routers.cloud.tls: "true"
      traefik.http.routers.cloud.tls.certresolver: "le"
      traefik.http.routers.cloud.tls.options: "default@file"
      traefik.http.services.cloud.loadbalancer.server.port: "80"

  db:
    image: mariadb
    container_name: nextcloud_db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD={{ cloud_db_root }}
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD={{ cloud_db_pass }}
      - MYSQL_DATABASE=nextcloud
    volumes:
      - mysql:/var/lib/mysql:z

  redis:
    image: redis:alpine
    container_name: nextcloud_redis
    restart: unless-stopped
    volumes:
      - redis:/var/lib/redis:z

{% if cloud_onlyoffice is defined %}
  onlyoffice:
    image: onlyoffice/documentserver:latest
    container_name: nextcloud_onlyoffice
    restart: unless-stopped
    stdin_open: true
    networks:
      default:
      inverseproxy_shared:
    volumes:
      - document_data:/var/www/onlyoffice/Data
      - document_log:/var/log/onlyoffice
    labels:
      traefik.docker.network: "inverseproxy_shared"
      traefik.enable: "true"
      traefik.http.middlewares.cloud-onlyoffice-xforwarded.headers.customrequestheaders.X-Forwarded-Proto: "https"
      traefik.http.routers.cloud-onlyoffice-unsec.entrypoints: "http"
      traefik.http.routers.cloud-onlyoffice-unsec.middlewares: "https-redirect@file"
      traefik.http.routers.cloud-onlyoffice-unsec.rule: "Host(`{{ cloud_onlyoffice_url }}`)"
      traefik.http.routers.cloud-onlyoffice-unsec.service: "cloud-onlyoffice"
      traefik.http.routers.cloud-onlyoffice.entrypoints: "https"
      traefik.http.routers.cloud-onlyoffice.middlewares: "security-headers@file, cloud-onlyoffice-xforwarded"
      traefik.http.routers.cloud-onlyoffice.rule: "Host(`{{ cloud_onlyoffice_url }}`)"
      traefik.http.routers.cloud-onlyoffice.service: "cloud-onlyoffice"
      traefik.http.routers.cloud-onlyoffice.tls: "true"
      traefik.http.routers.cloud-onlyoffice.tls.certresolver: "le"
      traefik.http.routers.cloud-onlyoffice.tls.options: "default@file"
      traefik.http.services.cloud-onlyoffice.loadbalancer.server.port: "80"

{% endif %}
{% if cloud_collabora is defined %}
  collabora:
    image: collabora/code
    container_name: nextcloud_collabora
    restart: unless-stopped
    environment:
      - domain={{ cloud_url|replace(".","\\\.") }}
      - username={{ cloud_collabora_admin_user }}
      - password={{ cloud_collabora_admin_pass }}
      - dictionaries=fr_FR
      - extra_params=--o:logging.level=warning --o:ssl.enable=false --o:ssl.termination=true
    cap_add:
      - MKNOD
    networks:
      inverseproxy_shared:
    labels:
      traefik.docker.network: "inverseproxy_shared"
      traefik.enable: "true"
      traefik.http.routers.cloud-collabora-unsec.entrypoints: "http"
      traefik.http.routers.cloud-collabora-unsec.middlewares: "https-redirect@file"
      traefik.http.routers.cloud-collabora-unsec.rule: "Host(`{{ cloud_collabora_url }}`)"
      traefik.http.routers.cloud-collabora-unsec.service: "cloud-collabora"
      traefik.http.routers.cloud-collabora.entrypoints: "https"
      traefik.http.routers.cloud-collabora.middlewares: "security-headers@file"
      traefik.http.routers.cloud-collabora.rule: "Host(`{{ cloud_collabora_url }}`)"
      traefik.http.routers.cloud-collabora.service: "cloud-collabora"
      traefik.http.routers.cloud-collabora.tls: "true"
      traefik.http.routers.cloud-collabora.tls.certresolver: "le"
      traefik.http.routers.cloud-collabora.tls.options: "default@file"
      traefik.http.services.cloud-collabora.loadbalancer.server.port: "9980"

{% endif %}
  apps:
    image: tecnativa/whitelist
    container_name: nextcloud_apps
    networks:
      proxy:
        aliases:
          - "apps.nextcloud.com"
      public:
    environment:
      TARGET: "apps.nextcloud.com"
      PRE_RESOLVE: 1
    restart: unless-stopped

  apps:
    image: tecnativa/whitelist
    container_name: nextcloud_notifs
    networks:
      proxy:
        aliases:
          - "push-notifications.nextcloud.com"
      public:
    environment:
      TARGET: "push-notifications.nextcloud.com"
      PRE_RESOLVE: 1
    restart: unless-stopped

networks:
    default:
        internal: true
        driver_opts:
            encrypted: 1
    proxy:
        internal: true
        driver_opts:
            encrypted: 1
    public:
        driver_opts:
            encrypted: 1
    inverseproxy_shared:
        external: true

volumes:
    nextcloud:
    mysql:
    redis:
{% if cloud_onlyoffice is defined %}
    document_data:
    document_log:
{% endif %}
